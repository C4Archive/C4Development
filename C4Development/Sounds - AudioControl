//
//  CFACanvas.h
//  CodeSamples
//
//	A Cocoa For Artists project
//  Created by Travis Kirton
//

#import "CFACanvas.h"

@implementation CFACanvas

NSRect playRect, stopRect, scrubRect;
BOOL playHover, stopHover, scrubHover;
BOOL playPressed, stopPressed, scrubPressed;
CFAString *play, *stop;
CFAImage *logo;
CFASound *clip;

-(void)setup {
[self drawStyle:DISPLAYRATE];
[self windowWidth:400 andHeight:320];
clip = [CFASound soundWithName:@"loop" andType:@"aif"];
[clip setLoops:YES];

playRect = NSMakeRect(10, 10, 50, 20);
stopRect = NSMakeRect(70, 10, 50, 20);
scrubRect = NSMakeRect(0, self.centerPos.y-10, 30, 20);

[CFAShape noFill];
[CFAShape stroke];
[CFAShape stroke:1];

play = [[CFAString stringWithString:@" play"] retain];
stop = [[CFAString stringWithString:@" stop"] retain];
[CFAString fill:1.0f];

logo = [[CFAImage imageName:@"C4Orange.png"] retain];
}

-(void)draw {
if(!scrubPressed)
scrubRect.origin.x = [clip currentTime]/[clip duration]*self.canvasWidth;

[self background:0];
[CFAShape stroke:1.0f];
if(playPressed) [CFAShape strokeRed:0.2f green:0.4f blue:1.0f];
else if(playHover) [CFAShape strokeRed:1.0f green:0.2f blue:0.2f];
[CFAShape rectAt:playRect.origin size:playRect.size];

[CFAShape stroke:1.0f];
if(stopPressed) [CFAShape strokeRed:0.2f green:0.4f blue:1.0f];
else if(stopHover) [CFAShape strokeRed:1.0f green:0.2f blue:0.2f];
[CFAShape rectAt:stopRect.origin size:stopRect.size];

//    [CFAShape stroke:1.0f];
//    if(scrubPressed) [CFAShape strokeRed:0.2f green:0.4f blue:1.0f];
//    else if(scrubHover) [CFAShape strokeRed:1.0f green:0.2f blue:0.2f];
//    [CFAShape rectAt:scrubRect.origin size:scrubRect.size];

[play drawInRect:playRect];
[stop drawInRect:stopRect];
[[CFAString stringWithFormat:@"%4.2f",[clip currentTime]] drawAtPoint:NSMakePoint(140,10)];

[logo drawInRect:scrubRect];
}

-(void)mouseMoved {
if(NSPointInRect(mousePos, playRect)) playHover = YES;
else playHover = NO;

if(NSPointInRect(mousePos, stopRect)) stopHover = YES;
else stopHover = NO;

if(NSPointInRect(mousePos, scrubRect)) scrubHover = YES;
else scrubHover = NO;
}

-(void)mousePressed {
if(playHover){ 
playPressed = YES; 
if(![clip isPlaying]){
[clip play];
} else {
[clip resume];
}
}
if(stopHover){
stopPressed = YES;
if([clip isPlaying]){
[clip pause];
}
}
if(scrubHover) scrubPressed = YES;
}

-(void)mouseReleased {
playPressed = NO;
stopPressed = NO;

if(scrubPressed) {
[clip setCurrentTime:scrubRect.origin.x/self.canvasWidth*[clip duration]];
}
scrubPressed = NO;
}

-(void)mouseDragged {
if(scrubPressed){
scrubRect.origin.x += mousePos.x - prevMousePos.x;
}
}
@end