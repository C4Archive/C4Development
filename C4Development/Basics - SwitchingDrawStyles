//
//  CFACanvas.h
//  CodeSamples
//
//	A Cocoa For Artists project
//  Created by Travis Kirton
//

#import "CFACanvas.h"
@interface CFACanvas (private)
-(void)setNewFramerate;
@end

NSInteger y;
CFAString *message;

@implementation CFACanvas

-(void)setup {
[self windowWidth:400 andHeight:320];

[CFAString fill:1.0f];
message = [[CFAString stringWithString:@"The default draw style is EVENTBASED"] retain];

[CFAShape strokeRed:1.0f green:0.2f blue:0.2f];
y = self.centerPos.y;
}

-(void)draw {
[self background:0.0f];
y++;
if (y > self.canvasHeight) y = 0;
[CFAShape lineFromX:0 Y:y toX:self.canvasWidth Y:y];	

[message drawAtPoint:NSMakePoint(20, self.centerPos.y)];
}

-(void)keyPressed {
switch (keyChar) {
case RETURN :
[self setNewFramerate];
break;
default:
break;
}
}

-(void)mousePressed {
message = [[CFAString stringWithFormat:
@"The current drawStyle is: ANIMATED\nThe target frameRate is: %4.2f",
self.frameRate] retain];
[self drawStyle:ANIMATED];
}

-(void)mouseReleased {
message = [[CFAString stringWithString:@"The current drawStyle is: EVENTBASED"] retain];
[self drawStyle:EVENTBASED];
}

-(void)setNewFramerate {
int newFramerate = [CFAMath randomIntBetweenA:1 andB:60];
[self setFrameRate:newFramerate];
message = [[CFAString stringWithFormat:
@"The current drawStyle is: ANIMATED\nThe target frameRate is: %4.2f",
self.frameRate] retain];
}

@end