//
//  CFACanvas.h
//  CodeSamples
//
//	A Cocoa For Artists project
//  Created by Travis Kirton
//

////////////////////////////////////////////////////////////////
// The Particle object
////////////////////////////////////////////////////////////////

@interface Particle : CFAObject {
@private
CFAVector *location, *velocity, *acceleration, *prevLocation;
NSPoint target;
float topSpeed;
}
-(void)setTarget:(NSNotification *)mouseMovedNotification;
-(void)draw;
@end

@implementation Particle
-(id)init {
if(!(self = [super init])) {
return nil;
}

location = [CFAVector vectorWithX:[CFAMath randomInt:400]
Y:[CFAMath randomInt:320]
Z:0];

prevLocation = [CFAVector vectorWithX:0 Y:0 Z:0];

velocity = [CFAVector vectorWithX:0 Y:0 Z:0];
topSpeed = [CFAMath randomInt:3]+3.0f;

[self listenFor:MOUSEMOVED andRunMethod:@"setTarget:"];
[self updateAutomaticallyUsingFrames:1];
return self;
}

-(void)setTarget:(NSNotification *)mouseMovedNotification {
target = [[[mouseMovedNotification userInfo] 
objectForKey:@"mouseEvent"] locationInWindow];
}

-(void)update {

[prevLocation setX:location.x Y:location.y Z:location.z];

CFAVector *mouse = [CFAVector vectorWithX:target.x Y:target.y Z:0];
CFAVector *dir = mouse;
[dir subtract:location];
[dir normalize];
[dir multiplyScalar:-0.6];

[acceleration release];
acceleration = dir;

[velocity add:acceleration];
[velocity limit:topSpeed];

[location add:velocity];

if(location.x > 400) {
location.x = 400;
} else if (location.x < 0) {
location.x = 0;
}
if(location.y > 320) {
location.y = 320;
} else if (location.y < 0) {
location.y = 0;
}
}

-(void)draw {
[CFAShape ellipseWithXPos:location.x yPos:location.y width:6 andHeight:6];
}
@end

////////////////////////////////////////////////////////////////
// The Canvas
////////////////////////////////////////////////////////////////

NSMutableArray *particleArray;

#import "CFACanvas.h"

@implementation CFACanvas

-(void)setup {
[self drawStyle:DISPLAYRATE];
[self windowWidth:400 andHeight:320];

[CFAShape noStroke];
[CFAShape fill:1.0f];

particleArray = [[[NSMutableArray alloc] initWithCapacity:0] retain];

for(int i = 0; i < 100; i++) {
[particleArray addObject:[[Particle alloc] init]];
}
}

-(void)draw {
[self background:0 alpha:0.05];
for(Particle *p in particleArray) {
[p draw];
}
}
@end
